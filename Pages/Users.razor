@page "/Users"
@using BlazorApp.Data
@using BlazorApp.Services
@inject RecordService RecordService
@inject NavigationManager Navigation
@inject IJSRuntime JS
<h3>Users</h3>

@if (users == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Actions</th> @* Edit & Delete Column *@
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="() => EditUser(user.Id)">
                            Edit
                        </button>
                        <button class="btn btn-sm btn-danger ms-2" @onclick="() => DeleteUser(user.Id)">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Record>? users;

    protected override async Task OnInitializedAsync()
    {
        users = await RecordService.GetUsersAsync();
    }

    private void EditUser(int id)
    {
        Navigation.NavigateTo($"/edit-user/{id}");
    }

    private async Task DeleteUser(int id)
    {
        bool confirmDelete = await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this user?");
        if (confirmDelete)
        {
            bool success = await RecordService.DeleteUserAsync(id);
            if (success)
            {
                users = await RecordService.GetUsersAsync(); // Refresh user list
            }
        }
    }
}
